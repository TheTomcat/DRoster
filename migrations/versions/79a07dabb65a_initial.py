"""initial

Revision ID: 79a07dabb65a
Revises: 
Create Date: 2020-04-09 16:00:27.635975

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79a07dabb65a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allocations',
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('roster_version_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_variation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.ForeignKeyConstraint(['roster_version_id'], ['roster_versions.roster_version_id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.shift_id'], ),
    sa.PrimaryKeyConstraint('allocation_id')
    )
    op.create_table('approvals',
    sa.Column('approval_id', sa.Integer(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('approval_id')
    )
    op.create_table('colours',
    sa.Column('colour_id', sa.Integer(), nullable=False),
    sa.Column('r', sa.Integer(), nullable=True),
    sa.Column('g', sa.Integer(), nullable=True),
    sa.Column('b', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.PrimaryKeyConstraint('colour_id')
    )
    op.create_table('defaultcovers',
    sa.Column('cover_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start', sa.Time(), nullable=True),
    sa.Column('end', sa.Time(), nullable=True),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.Column('rostered_hours', sa.Numeric(), nullable=True),
    sa.Column('overtime_hours', sa.Numeric(), nullable=True),
    sa.Column('fore_colour', sa.String(), nullable=True),
    sa.Column('back_colour', sa.String(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('allow_overload', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('cover_id')
    )
    op.create_table('departments',
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('hr_id', sa.String(), nullable=True),
    sa.Column('long_name', sa.String(), nullable=True),
    sa.Column('settings', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('department_id')
    )
    op.create_table('eligibility',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pool_id'], ['pools.pool_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], )
    )
    op.create_table('employees',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('novel_login', sa.String(), nullable=True),
    sa.Column('payroll_id', sa.String(), nullable=True),
    sa.Column('given_name', sa.String(), nullable=True),
    sa.Column('preferred_name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('employee_id')
    )
    op.create_table('functions',
    sa.Column('function_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('function_id')
    )
    op.create_table('group_policies',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('policy_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.policy_id'], )
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('leave',
    sa.Column('leave_id', sa.Integer(), nullable=False),
    sa.Column('request_group_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('approval_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approval_id'], ['approvals.approval_id'], ),
    sa.ForeignKeyConstraint(['request_group_id'], ['leave_request_groups.leave_request_group_id'], ),
    sa.PrimaryKeyConstraint('leave_id')
    )
    op.create_table('leave_request_groups',
    sa.Column('leave_request_group_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('date_submitted', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('leave_request_group_id')
    )
    op.create_table('membership',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.ForeignKeyConstraint(['pool_id'], ['pools.pool_id'], )
    )
    op.create_table('policies',
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('function_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.ForeignKeyConstraint(['function_id'], ['functions.function_id'], ),
    sa.PrimaryKeyConstraint('policy_id')
    )
    op.create_table('pools',
    sa.Column('pool_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.PrimaryKeyConstraint('pool_id')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('roster_groups',
    sa.Column('roster_group_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ),
    sa.PrimaryKeyConstraint('roster_group_id')
    )
    op.create_table('roster_versions',
    sa.Column('roster_version_id', sa.Integer(), nullable=False),
    sa.Column('roster_id', sa.Integer(), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('is_first', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['roster_id'], ['rosters.roster_id'], ),
    sa.PrimaryKeyConstraint('roster_version_id')
    )
    op.create_table('rostered_employee',
    sa.Column('roster_version_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.ForeignKeyConstraint(['roster_version_id'], ['roster_versions.roster_version_id'], )
    )
    op.create_table('rostered_roles',
    sa.Column('roster_version_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['roster_version_id'], ['roster_versions.roster_version_id'], )
    )
    op.create_table('rosters',
    sa.Column('roster_id', sa.Integer(), nullable=False),
    sa.Column('roster_group_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.Date(), nullable=True),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('last_version_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['last_version_id'], ['roster_versions.roster_version_id'], ),
    sa.ForeignKeyConstraint(['roster_group_id'], ['roster_groups.roster_group_id'], ),
    sa.PrimaryKeyConstraint('roster_id')
    )
    op.create_table('shifts',
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('rostered_hours', sa.Numeric(), nullable=True),
    sa.Column('overtime_hours', sa.Numeric(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('allow_overload', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('shift_id')
    )
    op.create_table('user_group',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], )
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('session_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('session_token')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('user_group')
    op.drop_table('shifts')
    op.drop_table('rosters')
    op.drop_table('rostered_roles')
    op.drop_table('rostered_employee')
    op.drop_table('roster_versions')
    op.drop_table('roster_groups')
    op.drop_table('roles')
    op.drop_table('pools')
    op.drop_table('policies')
    op.drop_table('membership')
    op.drop_table('leave_request_groups')
    op.drop_table('leave')
    op.drop_table('groups')
    op.drop_table('group_policies')
    op.drop_table('functions')
    op.drop_table('employees')
    op.drop_table('eligibility')
    op.drop_table('departments')
    op.drop_table('defaultcovers')
    op.drop_table('colours')
    op.drop_table('approvals')
    op.drop_table('allocations')
    # ### end Alembic commands ###
